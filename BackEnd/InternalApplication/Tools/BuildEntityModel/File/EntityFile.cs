// <autogenerated />
namespace BuildEntityModel.File
{
    using System;
    using System.IO;
    using System.Collections.Generic;
    using System.Text;
    using System.Threading.Tasks;


    /// <summary>
    /// Create entity model class
    /// </summary>
    public class EntityFile : IFile
    {
        private string CurrentLocation = Directory.GetCurrentDirectory();
        public string Folder = "Models";

        public EntityFile()
        {
            string path = Path.Combine(CurrentLocation, Folder);
            CheckLocationFolder(path);
        }

        /// <summary>
        /// Create file function. return true if success, false for otherwise.
        /// </summary>
        /// <param name="fileName">File name.</param>
        /// <param name="content">File content</param>
        /// <returns>true/false</returns>
        public async Task CreateFile(string fileName, string content)
        {
            try
            {
                string path = Path.Combine(CurrentLocation, Folder);
                string filePath = Path.Combine(path, fileName);

                await File.WriteAllTextAsync(filePath, content);
                Console.WriteLine($"Create model {fileName} complete");

            }
            catch(Exception ex)
            {
                Console.WriteLine($"CreateFile {ex.Message}");
            }
        }

        private void CheckLocationFolder(string path)
        {
            if (Directory.Exists(path))
            {
                Directory.Delete(path, true);
            }
            Directory.CreateDirectory(path);
        }
    }
}
